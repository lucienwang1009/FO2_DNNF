Number: formula size {Formula representation}
1
18
Number: #variables {Formula representation}
1
6
Number: #clauses {Formula representation}
1
9
Timer (reduced): initialize [ns] {Formula representation}
1
15542
Timer: compute connected components [ns] {Formula representation}
3
6166
791
4042
2055.333333
Timer: recognition of Krom-C [ns] {Formula representation}
0
0
0
0
0.000000
Timer: recognition of Horn-C [ns] {Formula representation}
0
0
0
0
0.000000
Timer: recognition of anti-Horn-C [ns] {Formula representation}
0
0
0
0
0.000000
Number: circuit size {Circuit}
1
30
Number: #nodes {Circuit}
1
27
Number: #edges {Circuit}
1
30
Number: #variables {Circuit}
1
6
Timer: copy subcircuit [ns] {Circuit}
0
0
0
0
0.000000
Counter: formula size (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #variables (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Counter: #clauses (copy subcircuit) {Circuit}
0
0
0
0
0.000000
Timer (reduced): initialize [ns] {Compiler}
1
1201833
Timer (reduced): compile [ns] {Compiler}
1
281125
Number: #unsatisfiable residual formulae {Compiler}
1
0
Number: #empty residual formulae {Compiler}
1
4
Number: #splits {Compiler}
1
0
Number: #decisions {Compiler}
1
3
Counter: ratio of recomputed hypergraph cuts {Compiler}
3
2
0
1
0.666667
Counter: #empty hypergraph cuts / #hypergraph cuts {Compiler}
2
1
0
1
0.500000
Counter: #connected components {Compiler}
3
3
1
1
1.000000
Counter: #monotone residual formulae / #residual formulae {Compiler}
3
0
0
0
0.000000
Counter: monotone residual formula size {Compiler}
0
0
0
0
0.000000
Counter: #pure clauses / #clauses {Compiler}
3
0.000000
0.000000
0.000000
0.000000
Counter: pure residual formula size / residual formula size {Compiler}
3
0.000000
0.000000
0.000000
0.000000
Timer: assign literal [ns] {Compiler}
12
7709
125
2417
642.416667
Timer: unassign literal [ns] {Compiler}
12
59460
209
55084
4955.000000
Timer: get decision variable [ns] {Decision heuristic}
3
1042
125
584
347.333333
Counter: #preselected variables {Decision heuristic}
3
5
1
2
1.666667
Counter: #restricted variables / #preselected variables {Decision heuristic}
1
1.000000
1.000000
1.000000
1.000000
Timer (reduced): initialize [ns] {SAT solver}
1
26916
Timer (reduced): initial simplification [ns] {SAT solver}
1
416
Timer (reduced): initially implied literals [ns] {SAT solver}
1
209
Number: #initially implied literals {SAT solver}
1
0
Number: #initially implied literals / #variables {SAT solver}
1
0.000000
Timer: is satisfiable [ns] {SAT solver}
7
9542
292
3917
1363.142857
Timer: unit propagation [ns] {SAT solver}
7
1500
125
333
214.285714
Counter: #implied literals {SAT solver}
7
12
0
5
1.714286
Counter: #implied literals / #variables {SAT solver}
7
4.533333
0.000000
1.000000
0.647619
Timer: create implicit BCP structure [ns] {SAT solver}
0
0
0
0
0.000000
Timer: create equivalence preprocessing structure [ns] {SAT solver}
0
0
0
0
0.000000
Counter: #implicit implied literals / #variables {SAT solver}
0
0.000000
0.000000
0.000000
0.000000
Counter: #ignored variables / #variables {SAT solver}
0
0.000000
0.000000
0.000000
0.000000
Timer: compute cut [ns] {Partitioning hypergraph}
1
109625
109625
109625
109625.000000
Counter: cut size {Partitioning hypergraph}
1
2
2
2
2.000000
Counter: cut size / #variables {Partitioning hypergraph}
1
0.333333
0.333333
0.333333
0.333333
Timer: create occurrence list structure [ns] {Partitioning hypergraph}
1
22583
22583
22583
22583.000000
Counter: #vertices {Partitioning hypergraph}
1
6
6
6
6.000000
Counter: #vertices / #clauses {Partitioning hypergraph}
1
0.666667
0.666667
0.666667
0.666667
Counter: #hyperedges {Partitioning hypergraph}
1
6
6
6
6.000000
Counter: #hyperedges / #variables {Partitioning hypergraph}
1
1.000000
1.000000
1.000000
1.000000
Counter: hypergraph size {Partitioning hypergraph}
1
12
12
12
12.000000
Counter: hypergraph size / formula size {Partitioning hypergraph}
1
0.666667
0.666667
0.666667
0.666667
Timer: create equivalence structure [ns] {Partitioning hypergraph}
0
0
0
0
0.000000
Timer (reduced): creation [ns] {RenH-C recognition}
0
0
Timer (reduced): initialize [ns] {RenH-C recognition}
0
0
Timer: set assigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set unassigned literal [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set inactive clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: set active clause [ns] {RenH-C recognition}
0
0
0
0
0.000000
Timer: is renH-C [ns] {RenH-C recognition}
0
0
0
0
0.000000
Counter: ratio of renH-C {RenH-C recognition}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - component caching}
3
0
0
0
0.000000
Number: #current entries {Cache - component caching}
1
3
Number: #deleted entries {Cache - component caching}
1
0
Number: #cache cleanings {Cache - component caching}
1
0
Timer: create cache record structure [ns] {Cache - component caching}
3
5626
667
4042
1875.333333
Timer: search cache record structure [ns] {Cache - component caching}
3
875
42
541
291.666667
Timer: add cache record structure [ns] {Cache - component caching}
3
6335
417
4209
2111.666667
Counter: #empty cache records / #cache records {Cache - component caching}
3
0
0
0
0.000000
Counter: formula size (cache record structure) {Cache - component caching}
3
32
4
18
10.666667
Counter: formula size (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - component caching}
3
32
4
18
10.666667
Counter: #variables (cache record structure) {Cache - component caching}
3
12
2
6
4.000000
Counter: #variables (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - component caching}
3
12
2
6
4.000000
Counter: #clauses (cache record structure) {Cache - component caching}
3
16
2
9
5.333333
Counter: #clauses (positive hit) {Cache - component caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - component caching}
3
16
2
9
5.333333
Counter: #removed clauses / #clauses {Cache - component caching}
3
3.000000
1.000000
1.000000
1.000000
Counter: #identical mappings / #mappings {Cache - component caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - component caching}
0
0
0
0
0.000000
Counter: #positive hits / #hits {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Number: #current entries {Cache - hypergraph cut caching}
1
0
Number: #deleted entries {Cache - hypergraph cut caching}
1
0
Number: #cache cleanings {Cache - hypergraph cut caching}
1
0
Timer: create cache record structure [ns] {Cache - hypergraph cut caching}
3
3334
42
3167
1111.333333
Timer: search cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: add cache record structure [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #empty cache records / #cache records {Cache - hypergraph cut caching}
3
3
1
1
1.000000
Counter: formula size (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: formula size (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #variables (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (cache record structure) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (positive hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #clauses (negative hit) {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Counter: #removed clauses / #clauses {Cache - hypergraph cut caching}
0
0.000000
0.000000
0.000000
0.000000
Counter: #identical mappings / #mappings {Cache - hypergraph cut caching}
0
0
0
0
0.000000
Timer: clean cache [ns] {Cache - hypergraph cut caching}
0
0
0
0
0.000000
